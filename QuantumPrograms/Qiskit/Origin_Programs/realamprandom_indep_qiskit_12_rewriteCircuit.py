from qiskit import QuantumCircuit, transpile
from qiskit_aer import AerSimulator
qc = QuantumCircuit(12, 12)
qc.ry(0.712419822340105,[0])
qc.ry(0.863822312234743,[1])
qc.cx([0], [1])
qc.ry(0.643883819048765,[2])
qc.cx([0], [2])
qc.cx([1], [2])
qc.ry(0.907323841335132,[3])
qc.cx([0], [3])
qc.cx([1], [3])
qc.cx([2], [3])
qc.ry(0.290168336424159,[4])
qc.cx([0], [4])
qc.cx([1], [4])
qc.cx([2], [4])
qc.cx([3], [4])
qc.ry(0.732434115955166,[5])
qc.cx([0], [5])
qc.cx([1], [5])
qc.cx([2], [5])
qc.cx([3], [5])
qc.cx([4], [5])
qc.ry(0.497763632467363,[6])
qc.cx([0], [6])
qc.cx([1], [6])
qc.cx([2], [6])
qc.cx([3], [6])
qc.cx([4], [6])
qc.cx([5], [6])
qc.ry(0.852175508548922,[7])
qc.cx([0], [7])
qc.cx([1], [7])
qc.cx([2], [7])
qc.cx([3], [7])
qc.cx([4], [7])
qc.cx([5], [7])
qc.cx([6], [7])
qc.ry(0.780678111264941,[8])
qc.cx([0], [8])
qc.cx([1], [8])
qc.cx([2], [8])
qc.cx([3], [8])
qc.cx([4], [8])
qc.cx([5], [8])
qc.cx([6], [8])
qc.cx([7], [8])
qc.ry(0.0486237804841163,[9])
qc.cx([0], [9])
qc.cx([1], [9])
qc.cx([2], [9])
qc.cx([3], [9])
qc.cx([4], [9])
qc.cx([5], [9])
qc.cx([6], [9])
qc.cx([7], [9])
qc.cx([8], [9])
qc.ry(0.763712585685793,[10])
qc.cx([0], [10])
qc.cx([1], [10])
qc.cx([2], [10])
qc.cx([3], [10])
qc.cx([4], [10])
qc.cx([5], [10])
qc.cx([6], [10])
qc.cx([7], [10])
qc.cx([8], [10])
qc.cx([9], [10])
qc.ry(0.10676835837285,[11])
qc.cx([0], [11])
qc.ry(0.260068160231368,[0])
qc.cx([1], [11])
qc.ry(0.682875084594235,[1])
qc.cx([0], [1])
qc.cx([2], [11])
qc.ry(0.472941765725198,[2])
qc.cx([0], [2])
qc.cx([1], [2])
qc.cx([3], [11])
qc.ry(0.214228171338917,[3])
qc.cx([0], [3])
qc.cx([1], [3])
qc.cx([2], [3])
qc.cx([4], [11])
qc.ry(0.330531216572872,[4])
qc.cx([0], [4])
qc.cx([1], [4])
qc.cx([2], [4])
qc.cx([3], [4])
qc.cx([5], [11])
qc.ry(0.278987889086798,[5])
qc.cx([0], [5])
qc.cx([1], [5])
qc.cx([2], [5])
qc.cx([3], [5])
qc.cx([4], [5])
qc.cx([6], [11])
qc.ry(0.739770127073683,[6])
qc.cx([0], [6])
qc.cx([1], [6])
qc.cx([2], [6])
qc.cx([3], [6])
qc.cx([4], [6])
qc.cx([5], [6])
qc.cx([7], [11])
qc.ry(0.352548360729743,[7])
qc.cx([0], [7])
qc.cx([1], [7])
qc.cx([2], [7])
qc.cx([3], [7])
qc.cx([4], [7])
qc.cx([5], [7])
qc.cx([6], [7])
qc.cx([8], [11])
qc.ry(0.523835907045601,[8])
qc.cx([0], [8])
qc.cx([1], [8])
qc.cx([2], [8])
qc.cx([3], [8])
qc.cx([4], [8])
qc.cx([5], [8])
qc.cx([6], [8])
qc.cx([7], [8])
qc.cx([9], [11])
qc.cx([10], [11])
qc.ry(0.90639734432951,[10])
qc.ry(0.977159094344778,[11])
qc.ry(0.813625764243296,[9])
qc.cx([0], [9])
qc.cx([0], [10])
qc.cx([0], [11])
qc.ry(0.986737270763838,[0])
qc.cx([1], [9])
qc.cx([1], [10])
qc.cx([1], [11])
qc.ry(0.973453963372006,[1])
qc.cx([0], [1])
qc.cx([2], [9])
qc.cx([2], [10])
qc.cx([2], [11])
qc.ry(0.161569356296445,[2])
qc.cx([0], [2])
qc.cx([1], [2])
qc.cx([3], [9])
qc.cx([3], [10])
qc.cx([3], [11])
qc.ry(0.257054128608471,[3])
qc.cx([0], [3])
qc.cx([1], [3])
qc.cx([2], [3])
qc.cx([4], [9])
qc.cx([4], [10])
qc.cx([4], [11])
qc.ry(0.0586417578116314,[4])
qc.cx([0], [4])
qc.cx([1], [4])
qc.cx([2], [4])
qc.cx([3], [4])
qc.cx([5], [9])
qc.cx([5], [10])
qc.cx([5], [11])
qc.ry(0.159070099281003,[5])
qc.cx([0], [5])
qc.cx([1], [5])
qc.cx([2], [5])
qc.cx([3], [5])
qc.cx([4], [5])
qc.cx([6], [9])
qc.cx([6], [10])
qc.cx([6], [11])
qc.ry(0.729273015991093,[6])
qc.cx([0], [6])
qc.cx([1], [6])
qc.cx([2], [6])
qc.cx([3], [6])
qc.cx([4], [6])
qc.cx([5], [6])
qc.cx([7], [9])
qc.cx([7], [10])
qc.cx([7], [11])
qc.ry(0.118114216051519,[7])
qc.cx([0], [7])
qc.cx([1], [7])
qc.cx([2], [7])
qc.cx([3], [7])
qc.cx([4], [7])
qc.cx([5], [7])
qc.cx([6], [7])
qc.cx([8], [9])
qc.cx([8], [10])
qc.cx([8], [11])
qc.ry(0.299690110017951,[8])
qc.cx([0], [8])
qc.cx([1], [8])
qc.cx([2], [8])
qc.cx([3], [8])
qc.cx([4], [8])
qc.cx([5], [8])
qc.cx([6], [8])
qc.cx([7], [8])
qc.cx([9], [10])
qc.cx([9], [11])
qc.cx([10], [11])
qc.ry(0.409846366277506,[10])
qc.ry(0.529547995532831,[11])
qc.ry(0.754808332444951,[9])
qc.cx([0], [9])
qc.cx([0], [10])
qc.cx([0], [11])
qc.ry(0.919811600390264,[0])
qc.cx([1], [9])
qc.cx([1], [10])
qc.cx([1], [11])
qc.ry(0.11976697236485,[1])
qc.cx([2], [9])
qc.cx([2], [10])
qc.cx([2], [11])
qc.ry(0.925025870092444,[2])
qc.cx([3], [9])
qc.cx([3], [10])
qc.cx([3], [11])
qc.ry(0.488154658406534,[3])
qc.cx([4], [9])
qc.cx([4], [10])
qc.cx([4], [11])
qc.ry(0.381743809398542,[4])
qc.cx([5], [9])
qc.cx([5], [10])
qc.cx([5], [11])
qc.ry(0.773543742552337,[5])
qc.cx([6], [9])
qc.cx([6], [10])
qc.cx([6], [11])
qc.ry(0.270192224608898,[6])
qc.cx([7], [9])
qc.cx([7], [10])
qc.cx([7], [11])
qc.ry(0.262553086890713,[7])
qc.cx([8], [9])
qc.cx([8], [10])
qc.cx([8], [11])
qc.ry(0.937422470674213,[8])
qc.cx([9], [10])
qc.cx([9], [11])
qc.cx([10], [11])
qc.ry(0.231791433299973,[10])
qc.ry(0.766124367047346,[11])
qc.ry(0.448349745773728,[9])
qc.barrier([0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11])
