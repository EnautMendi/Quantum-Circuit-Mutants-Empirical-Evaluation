from qiskit import QuantumCircuit, transpile
from qiskit_aer import AerSimulator
qc = QuantumCircuit(12, 12)
qc.ry(0.0170090083199332,[0])
qc.ry(0.325844187086121,[1])
qc.cx([0], [1])
qc.ry(0.412061413193228,[2])
qc.cx([0], [2])
qc.cx([1], [2])
qc.ry(0.481246487236741,[3])
qc.cx([0], [3])
qc.cx([1], [3])
qc.cx([2], [3])
qc.ry(0.846734214418044,[4])
qc.cx([0], [4])
qc.cx([1], [4])
qc.cx([2], [4])
qc.cx([3], [4])
qc.ry(0.979376339840102,[5])
qc.cx([0], [5])
qc.cx([1], [5])
qc.cx([2], [5])
qc.cx([3], [5])
qc.cx([4], [5])
qc.ry(0.37072394613309,[6])
qc.cx([0], [6])
qc.cx([1], [6])
qc.cx([2], [6])
qc.cx([3], [6])
qc.cx([4], [6])
qc.cx([5], [6])
qc.ry(0.403681467986601,[7])
qc.cx([0], [7])
qc.cx([1], [7])
qc.cx([2], [7])
qc.cx([3], [7])
qc.cx([4], [7])
qc.cx([5], [7])
qc.cx([6], [7])
qc.ry(0.29166482399721,[8])
qc.cx([0], [8])
qc.cx([1], [8])
qc.cx([2], [8])
qc.cx([3], [8])
qc.cx([4], [8])
qc.cx([5], [8])
qc.cx([6], [8])
qc.cx([7], [8])
qc.ry(0.026360920445927,[9])
qc.cx([0], [9])
qc.cx([1], [9])
qc.cx([2], [9])
qc.cx([3], [9])
qc.cx([4], [9])
qc.cx([5], [9])
qc.cx([6], [9])
qc.cx([7], [9])
qc.cx([8], [9])
qc.ry(0.399321029524756,[10])
qc.cx([0], [10])
qc.cx([1], [10])
qc.cx([2], [10])
qc.cx([3], [10])
qc.cx([4], [10])
qc.cx([5], [10])
qc.cx([6], [10])
qc.cx([7], [10])
qc.cx([8], [10])
qc.cx([9], [10])
qc.ry(0.0821157797361217,[11])
qc.cx([0], [11])
qc.ry(0.601028954203981,[0])
qc.cx([1], [11])
qc.ry(0.0775748268904934,[1])
qc.cx([0], [1])
qc.cx([2], [11])
qc.ry(0.589947904865103,[2])
qc.cx([0], [2])
qc.cx([1], [2])
qc.cx([3], [11])
qc.ry(0.502678773659795,[3])
qc.cx([0], [3])
qc.cx([1], [3])
qc.cx([2], [3])
qc.cx([4], [11])
qc.ry(0.847267750801084,[4])
qc.cx([0], [4])
qc.cx([1], [4])
qc.cx([2], [4])
qc.cx([3], [4])
qc.cx([5], [11])
qc.ry(0.0282773660153883,[5])
qc.cx([0], [5])
qc.cx([1], [5])
qc.cx([2], [5])
qc.cx([3], [5])
qc.cx([4], [5])
qc.cx([6], [11])
qc.ry(0.627427331397423,[6])
qc.cx([0], [6])
qc.cx([1], [6])
qc.cx([2], [6])
qc.cx([3], [6])
qc.cx([4], [6])
qc.cx([5], [6])
qc.cx([7], [11])
qc.ry(0.758113236655125,[7])
qc.cx([0], [7])
qc.cx([1], [7])
qc.cx([2], [7])
qc.cx([3], [7])
qc.cx([4], [7])
qc.cx([5], [7])
qc.cx([6], [7])
qc.cx([8], [11])
qc.ry(0.815233977466321,[8])
qc.cx([0], [8])
qc.cx([1], [8])
qc.cx([2], [8])
qc.cx([3], [8])
qc.cx([4], [8])
qc.cx([5], [8])
qc.cx([6], [8])
qc.cx([7], [8])
qc.cx([9], [11])
qc.cx([10], [11])
qc.ry(0.191014056888379,[10])
qc.ry(0.169944718184767,[11])
qc.ry(0.162773877487931,[9])
qc.cx([0], [9])
qc.cx([0], [10])
qc.cx([0], [11])
qc.ry(0.232848970612747,[0])
qc.cx([1], [9])
qc.cx([1], [10])
qc.cx([1], [11])
qc.ry(0.542290860085067,[1])
qc.cx([0], [1])
qc.cx([2], [9])
qc.cx([2], [10])
qc.cx([2], [11])
qc.ry(0.638411260544797,[2])
qc.cx([0], [2])
qc.cx([1], [2])
qc.cx([3], [9])
qc.cx([3], [10])
qc.cx([3], [11])
qc.ry(0.036797418431318,[3])
qc.cx([0], [3])
qc.cx([1], [3])
qc.cx([2], [3])
qc.cx([4], [9])
qc.cx([4], [10])
qc.cx([4], [11])
qc.ry(0.245513783115664,[4])
qc.cx([0], [4])
qc.cx([1], [4])
qc.cx([2], [4])
qc.cx([3], [4])
qc.cx([5], [9])
qc.cx([5], [10])
qc.cx([5], [11])
qc.ry(0.0662806754218017,[5])
qc.cx([0], [5])
qc.cx([1], [5])
qc.cx([2], [5])
qc.cx([3], [5])
qc.cx([4], [5])
qc.cx([6], [9])
qc.cx([6], [10])
qc.cx([6], [11])
qc.ry(0.7485015686619,[6])
qc.cx([0], [6])
qc.cx([1], [6])
qc.cx([2], [6])
qc.cx([3], [6])
qc.cx([4], [6])
qc.cx([5], [6])
qc.cx([7], [9])
qc.cx([7], [10])
qc.cx([7], [11])
qc.ry(0.691920471023457,[7])
qc.cx([0], [7])
qc.cx([1], [7])
qc.cx([2], [7])
qc.cx([3], [7])
qc.cx([4], [7])
qc.cx([5], [7])
qc.cx([6], [7])
qc.cx([8], [9])
qc.cx([8], [10])
qc.cx([8], [11])
qc.ry(0.957788461540876,[8])
qc.cx([0], [8])
qc.cx([1], [8])
qc.cx([2], [8])
qc.cx([3], [8])
qc.cx([4], [8])
qc.cx([5], [8])
qc.cx([6], [8])
qc.cx([7], [8])
qc.cx([9], [10])
qc.cx([9], [11])
qc.cx([10], [11])
qc.ry(0.443152811377326,[10])
qc.ry(0.597910271459087,[11])
qc.ry(0.549507570614021,[9])
qc.cx([0], [9])
qc.cx([0], [10])
qc.cx([0], [11])
qc.ry(0.762202161658778,[0])
qc.cx([1], [9])
qc.cx([1], [10])
qc.cx([1], [11])
qc.ry(0.489878381961141,[1])
qc.cx([2], [9])
qc.cx([2], [10])
qc.cx([2], [11])
qc.ry(0.584066369248479,[2])
qc.cx([3], [9])
qc.cx([3], [10])
qc.cx([3], [11])
qc.ry(0.974284935911382,[3])
qc.cx([4], [9])
qc.cx([4], [10])
qc.cx([4], [11])
qc.ry(0.551206488319484,[4])
qc.cx([5], [9])
qc.cx([5], [10])
qc.cx([5], [11])
qc.ry(0.962229021513724,[5])
qc.cx([6], [9])
qc.cx([6], [10])
qc.cx([6], [11])
qc.ry(0.378093795307636,[6])
qc.cx([7], [9])
qc.cx([7], [10])
qc.cx([7], [11])
qc.ry(0.738702499435375,[7])
qc.cx([8], [9])
qc.cx([8], [10])
qc.cx([8], [11])
qc.ry(0.405906143329217,[8])
qc.cx([9], [10])
qc.cx([9], [11])
qc.cx([10], [11])
qc.ry(0.143065965653509,[10])
qc.ry(0.0220925106878911,[11])
qc.ry(0.514932670966164,[9])
qc.barrier([0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11])
