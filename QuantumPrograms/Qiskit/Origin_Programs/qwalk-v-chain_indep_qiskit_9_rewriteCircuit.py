from qiskit import QuantumCircuit, transpile
from qiskit_aer import AerSimulator
qc = QuantumCircuit(9, 9)
qc.h([5])
qc.rccx([5], [1], [6])
qc.rccx([2], [6], [7])
qc.rccx([3], [7], [8])
qc.ccx([4], [8], [0])
qc.rccx([3], [7], [8])
qc.rccx([2], [6], [7])
qc.rccx([5], [1], [6])
qc.rccx([5], [2], [6])
qc.rccx([3], [6], [7])
qc.ccx([4], [7], [1])
qc.x([1])
qc.rccx([3], [6], [7])
qc.rccx([5], [2], [6])
qc.rccx([5], [3], [6])
qc.ccx([4], [6], [2])
qc.rccx([5], [3], [6])
qc.ccx([5], [4], [3])
qc.cx([5], [4])
qc.x([5])
qc.rccx([5], [1], [6])
qc.x([2])
qc.rccx([2], [6], [7])
qc.x([3])
qc.rccx([3], [7], [8])
qc.x([4])
qc.ccx([4], [8], [0])
qc.rccx([3], [7], [8])
qc.rccx([2], [6], [7])
qc.rccx([5], [1], [6])
qc.rccx([5], [2], [6])
qc.rccx([3], [6], [7])
qc.ccx([4], [7], [1])
qc.x([1])
qc.rccx([3], [6], [7])
qc.rccx([5], [2], [6])
qc.rccx([5], [3], [6])
qc.ccx([4], [6], [2])
qc.rccx([5], [3], [6])
qc.ccx([5], [4], [3])
qc.cx([5], [4])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[5])
qc.rccx([5], [1], [6])
qc.x([2])
qc.rccx([2], [6], [7])
qc.x([3])
qc.rccx([3], [7], [8])
qc.x([4])
qc.ccx([4], [8], [0])
qc.rccx([3], [7], [8])
qc.rccx([2], [6], [7])
qc.rccx([5], [1], [6])
qc.rccx([5], [2], [6])
qc.rccx([3], [6], [7])
qc.ccx([4], [7], [1])
qc.x([1])
qc.rccx([3], [6], [7])
qc.rccx([5], [2], [6])
qc.rccx([5], [3], [6])
qc.ccx([4], [6], [2])
qc.rccx([5], [3], [6])
qc.ccx([5], [4], [3])
qc.cx([5], [4])
qc.x([5])
qc.rccx([5], [1], [6])
qc.x([2])
qc.rccx([2], [6], [7])
qc.x([3])
qc.rccx([3], [7], [8])
qc.x([4])
qc.ccx([4], [8], [0])
qc.rccx([3], [7], [8])
qc.rccx([2], [6], [7])
qc.rccx([5], [1], [6])
qc.rccx([5], [2], [6])
qc.rccx([3], [6], [7])
qc.ccx([4], [7], [1])
qc.x([1])
qc.rccx([3], [6], [7])
qc.rccx([5], [2], [6])
qc.rccx([5], [3], [6])
qc.ccx([4], [6], [2])
qc.rccx([5], [3], [6])
qc.ccx([5], [4], [3])
qc.cx([5], [4])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[5])
qc.rccx([5], [1], [6])
qc.x([2])
qc.rccx([2], [6], [7])
qc.x([3])
qc.rccx([3], [7], [8])
qc.x([4])
qc.ccx([4], [8], [0])
qc.rccx([3], [7], [8])
qc.rccx([2], [6], [7])
qc.rccx([5], [1], [6])
qc.rccx([5], [2], [6])
qc.rccx([3], [6], [7])
qc.ccx([4], [7], [1])
qc.x([1])
qc.rccx([3], [6], [7])
qc.rccx([5], [2], [6])
qc.rccx([5], [3], [6])
qc.ccx([4], [6], [2])
qc.rccx([5], [3], [6])
qc.ccx([5], [4], [3])
qc.cx([5], [4])
qc.x([5])
qc.rccx([5], [1], [6])
qc.x([2])
qc.rccx([2], [6], [7])
qc.x([3])
qc.rccx([3], [7], [8])
qc.x([4])
qc.ccx([4], [8], [0])
qc.rccx([3], [7], [8])
qc.rccx([2], [6], [7])
qc.rccx([5], [1], [6])
qc.rccx([5], [2], [6])
qc.rccx([3], [6], [7])
qc.ccx([4], [7], [1])
qc.x([1])
qc.rccx([3], [6], [7])
qc.rccx([5], [2], [6])
qc.rccx([5], [3], [6])
qc.ccx([4], [6], [2])
qc.rccx([5], [3], [6])
qc.ccx([5], [4], [3])
qc.cx([5], [4])
qc.x([5])
qc.x([2])
qc.x([3])
qc.x([4])
qc.barrier([0], [1], [2], [3], [4], [5], [6], [7], [8])
