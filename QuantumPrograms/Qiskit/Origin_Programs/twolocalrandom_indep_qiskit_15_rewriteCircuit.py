from qiskit import QuantumCircuit, transpile
from qiskit_aer import AerSimulator
qc = QuantumCircuit(15, 15)
qc.ry(0.0291266525736139,[0])
qc.ry(0.290440888370004,[1])
qc.cx([0], [1])
qc.ry(0.654538644162044,[2])
qc.cx([0], [2])
qc.cx([1], [2])
qc.ry(0.476893977938488,[3])
qc.cx([0], [3])
qc.cx([1], [3])
qc.cx([2], [3])
qc.ry(0.373874121780685,[4])
qc.cx([0], [4])
qc.cx([1], [4])
qc.cx([2], [4])
qc.cx([3], [4])
qc.ry(0.968086829897854,[5])
qc.cx([0], [5])
qc.cx([1], [5])
qc.cx([2], [5])
qc.cx([3], [5])
qc.cx([4], [5])
qc.ry(0.536605307593765,[6])
qc.cx([0], [6])
qc.cx([1], [6])
qc.cx([2], [6])
qc.cx([3], [6])
qc.cx([4], [6])
qc.cx([5], [6])
qc.ry(0.191655053834276,[7])
qc.cx([0], [7])
qc.cx([1], [7])
qc.cx([2], [7])
qc.cx([3], [7])
qc.cx([4], [7])
qc.cx([5], [7])
qc.cx([6], [7])
qc.ry(0.210733416597645,[8])
qc.cx([0], [8])
qc.cx([1], [8])
qc.cx([2], [8])
qc.cx([3], [8])
qc.cx([4], [8])
qc.cx([5], [8])
qc.cx([6], [8])
qc.cx([7], [8])
qc.ry(0.881189575899915,[9])
qc.cx([0], [9])
qc.cx([1], [9])
qc.cx([2], [9])
qc.cx([3], [9])
qc.cx([4], [9])
qc.cx([5], [9])
qc.cx([6], [9])
qc.cx([7], [9])
qc.cx([8], [9])
qc.ry(0.0454312679895036,[10])
qc.cx([0], [10])
qc.cx([1], [10])
qc.cx([2], [10])
qc.cx([3], [10])
qc.cx([4], [10])
qc.cx([5], [10])
qc.cx([6], [10])
qc.cx([7], [10])
qc.cx([8], [10])
qc.cx([9], [10])
qc.ry(0.934307439502347,[11])
qc.cx([0], [11])
qc.cx([1], [11])
qc.cx([2], [11])
qc.cx([3], [11])
qc.cx([4], [11])
qc.cx([5], [11])
qc.cx([6], [11])
qc.cx([7], [11])
qc.cx([8], [11])
qc.cx([9], [11])
qc.cx([10], [11])
qc.ry(0.172297213139619,[12])
qc.cx([0], [12])
qc.cx([1], [12])
qc.cx([2], [12])
qc.cx([3], [12])
qc.cx([4], [12])
qc.cx([5], [12])
qc.cx([6], [12])
qc.cx([7], [12])
qc.cx([8], [12])
qc.cx([9], [12])
qc.cx([10], [12])
qc.cx([11], [12])
qc.ry(0.202448184648165,[13])
qc.cx([0], [13])
qc.cx([1], [13])
qc.cx([2], [13])
qc.cx([3], [13])
qc.cx([4], [13])
qc.cx([5], [13])
qc.cx([6], [13])
qc.cx([7], [13])
qc.cx([8], [13])
qc.cx([9], [13])
qc.cx([10], [13])
qc.cx([11], [13])
qc.cx([12], [13])
qc.ry(0.190068019391298,[14])
qc.cx([0], [14])
qc.ry(0.16132586137588,[0])
qc.cx([1], [14])
qc.ry(0.291890036032214,[1])
qc.cx([0], [1])
qc.cx([2], [14])
qc.ry(0.818993147216466,[2])
qc.cx([0], [2])
qc.cx([1], [2])
qc.cx([3], [14])
qc.ry(0.166427880122985,[3])
qc.cx([0], [3])
qc.cx([1], [3])
qc.cx([2], [3])
qc.cx([4], [14])
qc.ry(0.628940900573789,[4])
qc.cx([0], [4])
qc.cx([1], [4])
qc.cx([2], [4])
qc.cx([3], [4])
qc.cx([5], [14])
qc.ry(0.414718758222083,[5])
qc.cx([0], [5])
qc.cx([1], [5])
qc.cx([2], [5])
qc.cx([3], [5])
qc.cx([4], [5])
qc.cx([6], [14])
qc.ry(0.928640928088248,[6])
qc.cx([0], [6])
qc.cx([1], [6])
qc.cx([2], [6])
qc.cx([3], [6])
qc.cx([4], [6])
qc.cx([5], [6])
qc.cx([7], [14])
qc.ry(0.160289745862889,[7])
qc.cx([0], [7])
qc.cx([1], [7])
qc.cx([2], [7])
qc.cx([3], [7])
qc.cx([4], [7])
qc.cx([5], [7])
qc.cx([6], [7])
qc.cx([8], [14])
qc.ry(0.324661313187322,[8])
qc.cx([0], [8])
qc.cx([1], [8])
qc.cx([2], [8])
qc.cx([3], [8])
qc.cx([4], [8])
qc.cx([5], [8])
qc.cx([6], [8])
qc.cx([7], [8])
qc.cx([9], [14])
qc.cx([10], [14])
qc.ry(0.644429542873223,[10])
qc.cx([11], [14])
qc.ry(0.809091048663852,[11])
qc.cx([12], [14])
qc.ry(0.59045680492786,[12])
qc.cx([13], [14])
qc.ry(0.427609929482147,[13])
qc.ry(0.70475544833682,[14])
qc.ry(0.0866485351456551,[9])
qc.cx([0], [9])
qc.cx([0], [10])
qc.cx([0], [11])
qc.cx([0], [12])
qc.cx([0], [13])
qc.cx([0], [14])
qc.ry(0.94378348341626,[0])
qc.cx([1], [9])
qc.cx([1], [10])
qc.cx([1], [11])
qc.cx([1], [12])
qc.cx([1], [13])
qc.cx([1], [14])
qc.ry(0.0797669486694113,[1])
qc.cx([0], [1])
qc.cx([2], [9])
qc.cx([2], [10])
qc.cx([2], [11])
qc.cx([2], [12])
qc.cx([2], [13])
qc.cx([2], [14])
qc.ry(0.42379018888366,[2])
qc.cx([0], [2])
qc.cx([1], [2])
qc.cx([3], [9])
qc.cx([3], [10])
qc.cx([3], [11])
qc.cx([3], [12])
qc.cx([3], [13])
qc.cx([3], [14])
qc.ry(0.384891286719268,[3])
qc.cx([0], [3])
qc.cx([1], [3])
qc.cx([2], [3])
qc.cx([4], [9])
qc.cx([4], [10])
qc.cx([4], [11])
qc.cx([4], [12])
qc.cx([4], [13])
qc.cx([4], [14])
qc.ry(0.960686221448397,[4])
qc.cx([0], [4])
qc.cx([1], [4])
qc.cx([2], [4])
qc.cx([3], [4])
qc.cx([5], [9])
qc.cx([5], [10])
qc.cx([5], [11])
qc.cx([5], [12])
qc.cx([5], [13])
qc.cx([5], [14])
qc.ry(0.0728072924928789,[5])
qc.cx([0], [5])
qc.cx([1], [5])
qc.cx([2], [5])
qc.cx([3], [5])
qc.cx([4], [5])
qc.cx([6], [9])
qc.cx([6], [10])
qc.cx([6], [11])
qc.cx([6], [12])
qc.cx([6], [13])
qc.cx([6], [14])
qc.ry(0.343518879222857,[6])
qc.cx([0], [6])
qc.cx([1], [6])
qc.cx([2], [6])
qc.cx([3], [6])
qc.cx([4], [6])
qc.cx([5], [6])
qc.cx([7], [9])
qc.cx([7], [10])
qc.cx([7], [11])
qc.cx([7], [12])
qc.cx([7], [13])
qc.cx([7], [14])
qc.ry(0.109909466786351,[7])
qc.cx([0], [7])
qc.cx([1], [7])
qc.cx([2], [7])
qc.cx([3], [7])
qc.cx([4], [7])
qc.cx([5], [7])
qc.cx([6], [7])
qc.cx([8], [9])
qc.cx([8], [10])
qc.cx([8], [11])
qc.cx([8], [12])
qc.cx([8], [13])
qc.cx([8], [14])
qc.ry(0.64777129571878,[8])
qc.cx([0], [8])
qc.cx([1], [8])
qc.cx([2], [8])
qc.cx([3], [8])
qc.cx([4], [8])
qc.cx([5], [8])
qc.cx([6], [8])
qc.cx([7], [8])
qc.cx([9], [10])
qc.cx([9], [11])
qc.cx([10], [11])
qc.cx([9], [12])
qc.cx([10], [12])
qc.cx([11], [12])
qc.cx([9], [13])
qc.cx([10], [13])
qc.cx([11], [13])
qc.cx([12], [13])
qc.cx([9], [14])
qc.cx([10], [14])
qc.ry(0.589603273208839,[10])
qc.cx([11], [14])
qc.ry(0.107157692166806,[11])
qc.cx([12], [14])
qc.ry(0.0302316714325199,[12])
qc.cx([13], [14])
qc.ry(0.111620323458776,[13])
qc.ry(0.845887893588668,[14])
qc.ry(0.942227501155103,[9])
qc.cx([0], [9])
qc.cx([0], [10])
qc.cx([0], [11])
qc.cx([0], [12])
qc.cx([0], [13])
qc.cx([0], [14])
qc.ry(0.59277896537103,[0])
qc.cx([1], [9])
qc.cx([1], [10])
qc.cx([1], [11])
qc.cx([1], [12])
qc.cx([1], [13])
qc.cx([1], [14])
qc.ry(0.189414554494306,[1])
qc.cx([2], [9])
qc.cx([2], [10])
qc.cx([2], [11])
qc.cx([2], [12])
qc.cx([2], [13])
qc.cx([2], [14])
qc.ry(0.0627210152733462,[2])
qc.cx([3], [9])
qc.cx([3], [10])
qc.cx([3], [11])
qc.cx([3], [12])
qc.cx([3], [13])
qc.cx([3], [14])
qc.ry(0.517057132460663,[3])
qc.cx([4], [9])
qc.cx([4], [10])
qc.cx([4], [11])
qc.cx([4], [12])
qc.cx([4], [13])
qc.cx([4], [14])
qc.ry(0.441542639912424,[4])
qc.cx([5], [9])
qc.cx([5], [10])
qc.cx([5], [11])
qc.cx([5], [12])
qc.cx([5], [13])
qc.cx([5], [14])
qc.ry(0.798477382495773,[5])
qc.cx([6], [9])
qc.cx([6], [10])
qc.cx([6], [11])
qc.cx([6], [12])
qc.cx([6], [13])
qc.cx([6], [14])
qc.ry(0.188830271939867,[6])
qc.cx([7], [9])
qc.cx([7], [10])
qc.cx([7], [11])
qc.cx([7], [12])
qc.cx([7], [13])
qc.cx([7], [14])
qc.ry(0.527141614628195,[7])
qc.cx([8], [9])
qc.cx([8], [10])
qc.cx([8], [11])
qc.cx([8], [12])
qc.cx([8], [13])
qc.cx([8], [14])
qc.ry(0.0747526667780789,[8])
qc.cx([9], [10])
qc.cx([9], [11])
qc.cx([10], [11])
qc.cx([9], [12])
qc.cx([10], [12])
qc.cx([11], [12])
qc.cx([9], [13])
qc.cx([10], [13])
qc.cx([11], [13])
qc.cx([12], [13])
qc.cx([9], [14])
qc.cx([10], [14])
qc.ry(0.457447317973351,[10])
qc.cx([11], [14])
qc.ry(0.39537252534275,[11])
qc.cx([12], [14])
qc.ry(0.588308433826325,[12])
qc.cx([13], [14])
qc.ry(0.648360490327807,[13])
qc.ry(0.542407001762548,[14])
qc.ry(0.421356535749946,[9])
qc.barrier([0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14])
