from qiskit import QuantumCircuit, transpile
from qiskit_aer import AerSimulator
qc = QuantumCircuit(15, 15)
qc.ry(2.34056467604976,[0])
qc.ry(-0.109183181379418,[1])
qc.ry(-1.98971576761691,[2])
qc.ry(1.76511455687837,[3])
qc.ry(0.0525367496767625,[4])
qc.ry(0.0597431693318262,[5])
qc.ry(3.12590475112518,[6])
qc.ry(-0.693208211168419,[7])
qc.ry(-1.33271640159803,[8])
qc.ry(1.48469134643108,[9])
qc.ry(-2.92913879929781,[10])
qc.ry(-1.46553648482628,[11])
qc.ry(9.80939873825367e-05,[12])
qc.ry(-1.51823375140481,[13])
qc.ry(2.18333308077906,[14])
qc.cx([13], [14])
qc.cx([12], [13])
qc.cx([11], [12])
qc.cx([10], [11])
qc.ry(1.57309796248417,[11])
qc.ry(1.57249287410074,[12])
qc.ry(-0.0657436388166538,[13])
qc.ry(3.10504463075807,[14])
qc.cx([13], [14])
qc.cx([12], [13])
qc.cx([11], [12])
qc.ry(0.104248219074725,[12])
qc.ry(-1.57082875899888,[13])
qc.ry(0.958991734332455,[14])
qc.cx([9], [10])
qc.ry(-1.57055393761539,[10])
qc.cx([10], [11])
qc.ry(-0.736498053575815,[11])
qc.cx([8], [9])
qc.cx([7], [8])
qc.cx([6], [7])
qc.cx([5], [6])
qc.cx([4], [5])
qc.cx([3], [4])
qc.cx([2], [3])
qc.cx([1], [2])
qc.cx([0], [1])
qc.ry(1.5257796621841,[0])
qc.ry(1.5380411405517,[1])
qc.ry(-1.5686432795538,[2])
qc.ry(1.5710880110485,[3])
qc.ry(1.57086494468845,[4])
qc.ry(1.57025327291862,[5])
qc.ry(-1.56974781316054,[6])
qc.ry(-1.56912840538758,[7])
qc.ry(1.56855508731568,[8])
qc.ry(1.57195316348005,[9])
qc.cx([9], [10])
qc.ry(-0.0863288050770603,[10])
qc.cx([8], [9])
qc.cx([7], [8])
qc.cx([6], [7])
qc.cx([5], [6])
qc.cx([4], [5])
qc.cx([3], [4])
qc.cx([2], [3])
qc.cx([1], [2])
qc.cx([0], [1])
qc.ry(1.54472262906724,[0])
qc.ry(0.769096839778843,[1])
qc.ry(1.68017068117499,[2])
qc.ry(-0.418920778197748,[3])
qc.ry(-0.194867430079063,[4])
qc.ry(-1.62385544875284,[5])
qc.ry(-1.51088117142859,[6])
qc.ry(1.55529133183024,[7])
qc.ry(0.878180643866614,[8])
qc.ry(-0.23885181027279,[9])
qc.barrier([0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14])
