from qiskit import QuantumCircuit, transpile
from qiskit_aer import AerSimulator
qc = QuantumCircuit(19, 19)
qc.u(1.5707963267948966,0.0,0.0,[0])
qc.u(1.5707963267948966,0.0,0.0,[1])
qc.u(1.5707963267948966,0.0,0.0,[2])
qc.u(1.5707963267948966,0.0,0.0,[3])
qc.h([4])
qc.h([5])
qc.u(1.5707963267948966,0.0,0.0,[6])
qc.h([7])
qc.u(1.5707963267948966,0.0,0.0,[8])
qc.u(1.5707963267948966,0.0,0.0,[9])
qc.h([10])
qc.u(1.5707963267948966,0.0,0.0,[11])
qc.u(1.5707963267948966,0.0,0.0,[12])
qc.h([13])
qc.u(1.5707963267948966,0.0,0.0,[14])
qc.u(1.5707963267948966,0.0,0.0,[15])
qc.h([16])
qc.u(1.5707963267948966,0.0,0.0,[17])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[18])
qc.cx([0], [18])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[0])
qc.cx([1], [18])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[1])
qc.cx([2], [18])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[2])
qc.cx([3], [18])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[3])
qc.cx([4], [18])
qc.h([4])
qc.cx([5], [18])
qc.h([5])
qc.cx([6], [18])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[6])
qc.cx([7], [18])
qc.h([7])
qc.cx([8], [18])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[8])
qc.cx([9], [18])
qc.cx([10], [18])
qc.h([10])
qc.cx([11], [18])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[11])
qc.cx([12], [18])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[12])
qc.cx([13], [18])
qc.h([13])
qc.cx([14], [18])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[14])
qc.cx([15], [18])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[15])
qc.cx([16], [18])
qc.h([16])
qc.cx([17], [18])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[17])
qc.u(1.5707963267948966,-3.141592653589793,-3.141592653589793,[9])
qc.barrier([0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18])
