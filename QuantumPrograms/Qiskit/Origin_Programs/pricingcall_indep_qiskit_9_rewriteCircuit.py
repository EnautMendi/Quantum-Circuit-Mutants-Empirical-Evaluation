from qiskit import QuantumCircuit, transpile
from qiskit_aer import AerSimulator
qc = QuantumCircuit(9, 9)
qc.ry(1.6653032,[0])
qc.ry(1.6795034,[1])
qc.ry(1.6593386,[2])
qc.ry(1.5137858,[3])
qc.cx([3], [2])
qc.ry(0.92894651,[2])
qc.cx([3], [2])
qc.cx([2], [1])
qc.ry(0.28542724,[1])
qc.cx([3], [1])
qc.ry(0.13151599,[1])
qc.cx([2], [1])
qc.ry(0.591118,[1])
qc.cx([3], [1])
qc.cx([1], [0])
qc.ry(0.093121624,[0])
qc.cx([2], [0])
qc.ry(0.023280045,[0])
qc.cx([1], [0])
qc.ry(0.18666819,[0])
qc.cx([3], [0])
qc.ry(0.10136095,[0])
qc.cx([1], [0])
qc.ry(0.010077397,[0])
qc.cx([2], [0])
qc.ry(0.049324335,[0])
qc.cx([1], [0])
qc.ry(0.34868875,[0])
qc.cx([3], [0])
qc.ry(1.1780972450961724,[4])
qc.cry(0.0,[0], [4])
qc.cry(0.0,[1], [4])
qc.cry(0.0,[2], [4])
qc.cry(0.0,[3], [4])
qc.x([3])
qc.x([5])
qc.cx([0], [6])
qc.ccx([1], [6], [7])
qc.ccx([2], [7], [8])
qc.x([8])
qc.ccx([3], [8], [5])
qc.x([3])
qc.cx([5], [4])
qc.u(0.29425236,0.0,0.0,[4])
qc.cx([5], [4])
qc.u(0.29425236,-3.141592653589793,-3.141592653589793,[4])
qc.cx([5], [4])
qc.u(-0.022898382,0.0,0.0,[4])
qc.cx([5], [4])
qc.u(0.022898382,0.0,0.0,[4])
qc.x([8])
qc.ccx([2], [7], [8])
qc.ccx([1], [6], [7])
qc.cx([0], [6])
qc.ccx([5], [0], [4])
qc.cx([5], [4])
qc.u(0.022898382,0.0,0.0,[4])
qc.cx([5], [4])
qc.u(-0.022898382,0.0,0.0,[4])
qc.ccx([5], [0], [4])
qc.cx([0], [6])
qc.cx([5], [4])
qc.u(-0.045796763,0.0,0.0,[4])
qc.cx([5], [4])
qc.u(0.045796763,0.0,0.0,[4])
qc.ccx([5], [1], [4])
qc.cx([5], [4])
qc.u(0.045796763,0.0,0.0,[4])
qc.cx([5], [4])
qc.u(-0.045796763,0.0,0.0,[4])
qc.ccx([5], [1], [4])
qc.ccx([1], [6], [7])
qc.cx([5], [4])
qc.u(-0.091593526,0.0,0.0,[4])
qc.cx([5], [4])
qc.u(0.091593526,0.0,0.0,[4])
qc.ccx([5], [2], [4])
qc.cx([5], [4])
qc.u(0.091593526,0.0,0.0,[4])
qc.cx([5], [4])
qc.u(-0.091593526,0.0,0.0,[4])
qc.ccx([5], [2], [4])
qc.ccx([2], [7], [8])
qc.cx([5], [4])
qc.u(-0.18318705,0.0,0.0,[4])
qc.cx([5], [4])
qc.u(0.18318705,0.0,0.0,[4])
qc.ccx([5], [3], [4])
qc.cx([5], [4])
qc.u(0.18318705,0.0,0.0,[4])
qc.cx([5], [4])
qc.u(-0.18318705,0.0,0.0,[4])
qc.ccx([5], [3], [4])
qc.x([3])
qc.x([8])
qc.ccx([3], [8], [5])
qc.x([3])
qc.x([5])
qc.x([8])
qc.ccx([2], [7], [8])
qc.ccx([1], [6], [7])
qc.cx([0], [6])
qc.barrier([0], [1], [2], [3], [4], [5], [6], [7], [8])
