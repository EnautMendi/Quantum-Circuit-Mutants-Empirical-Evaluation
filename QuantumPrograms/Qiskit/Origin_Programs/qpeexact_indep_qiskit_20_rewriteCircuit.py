from qiskit import QuantumCircuit, transpile
from qiskit_aer import AerSimulator
qc = QuantumCircuit(20, 20)
qc.h([0])
qc.h([1])
qc.h([2])
qc.h([3])
qc.h([4])
qc.h([5])
qc.h([6])
qc.h([7])
qc.h([8])
qc.h([9])
qc.h([10])
qc.h([11])
qc.h([12])
qc.h([13])
qc.h([14])
qc.h([15])
qc.h([16])
qc.h([17])
qc.h([18])
qc.x([19])
qc.cp(-2.6929632,[19], [0])
qc.cp(0.89725892,[19], [1])
qc.cp(1.7945178,[19], [2])
qc.cp(-2.6941496,[19], [3])
qc.cp(0.89488604,[19], [4])
qc.cp(1.7897721,[19], [5])
qc.cp(-2.7036411,[19], [6])
qc.cp(0.87590303,[19], [7])
qc.cp(1.7518061,[19], [8])
qc.cp(-2.7795732,[19], [9])
qc.cp(0.72403893,[19], [10])
qc.cp(1.4480779,[19], [11])
qc.cp(2.8961557,[19], [12])
qc.cp(-0.49087385,[19], [13])
qc.cp(-0.9817477042468103,[19], [14])
qc.cp(-1.9634954084936207,[19], [15])
qc.cp(2.356194490192345,[19], [16])
qc.cp(-1.5707963267948966,[19], [17])
qc.cp(3.141592653589793,[19], [18])
qc.swap([0], [18])
qc.h([0])
qc.swap([1], [17])
qc.cp(-1.5707963267948966,[1], [0])
qc.h([1])
qc.swap([2], [16])
qc.cp(-0.7853981633974483,[2], [0])
qc.cp(-1.5707963267948966,[2], [1])
qc.h([2])
qc.swap([3], [15])
qc.cp(-0.39269908169872414,[3], [0])
qc.cp(-0.7853981633974483,[3], [1])
qc.cp(-1.5707963267948966,[3], [2])
qc.h([3])
qc.swap([4], [14])
qc.cp(-0.19634954084936207,[4], [0])
qc.cp(-0.39269908169872414,[4], [1])
qc.cp(-0.7853981633974483,[4], [2])
qc.cp(-1.5707963267948966,[4], [3])
qc.h([4])
qc.swap([5], [13])
qc.cp(-0.09817477042468103,[5], [0])
qc.cp(-0.19634954084936207,[5], [1])
qc.cp(-0.39269908169872414,[5], [2])
qc.cp(-0.7853981633974483,[5], [3])
qc.cp(-1.5707963267948966,[5], [4])
qc.h([5])
qc.swap([6], [12])
qc.cp(-0.04908738521234052,[6], [0])
qc.cp(-0.09817477042468103,[6], [1])
qc.cp(-0.19634954084936207,[6], [2])
qc.cp(-0.39269908169872414,[6], [3])
qc.cp(-0.7853981633974483,[6], [4])
qc.cp(-1.5707963267948966,[6], [5])
qc.h([6])
qc.swap([7], [11])
qc.cp(-0.02454369260617026,[7], [0])
qc.cp(-0.04908738521234052,[7], [1])
qc.cp(-0.09817477042468103,[7], [2])
qc.cp(-0.19634954084936207,[7], [3])
qc.cp(-0.39269908169872414,[7], [4])
qc.cp(-0.7853981633974483,[7], [5])
qc.cp(-1.5707963267948966,[7], [6])
qc.h([7])
qc.swap([8], [10])
qc.cp(-0.01227184630308513,[8], [0])
qc.cp(-0.02454369260617026,[8], [1])
qc.cp(-0.04908738521234052,[8], [2])
qc.cp(-0.09817477042468103,[8], [3])
qc.cp(-0.19634954084936207,[8], [4])
qc.cp(-0.39269908169872414,[8], [5])
qc.cp(-0.7853981633974483,[8], [6])
qc.cp(-1.5707963267948966,[8], [7])
qc.h([8])
qc.cp(-0.006135923151542565,[9], [0])
qc.cp(-0.0030679615757712823,[10], [0])
qc.cp(-0.0015339807878856412,[11], [0])
qc.cp(-0.0007669903939428206,[12], [0])
qc.cp(-0.0003834951969714103,[13], [0])
qc.cp(-0.00019174759848570515,[14], [0])
qc.cp(-9.587379924285257e-05,[15], [0])
qc.cp(-4.7936899621426287e-05,[16], [0])
qc.cp(-2.3968449810713143e-05,[17], [0])
qc.cp(-1.1984224905356572e-05,[18], [0])
qc.cp(-0.01227184630308513,[9], [1])
qc.cp(-0.006135923151542565,[10], [1])
qc.cp(-0.0030679615757712823,[11], [1])
qc.cp(-0.0015339807878856412,[12], [1])
qc.cp(-0.0007669903939428206,[13], [1])
qc.cp(-0.0003834951969714103,[14], [1])
qc.cp(-0.00019174759848570515,[15], [1])
qc.cp(-9.587379924285257e-05,[16], [1])
qc.cp(-4.7936899621426287e-05,[17], [1])
qc.cp(-2.3968449810713143e-05,[18], [1])
qc.cp(-0.02454369260617026,[9], [2])
qc.cp(-0.01227184630308513,[10], [2])
qc.cp(-0.006135923151542565,[11], [2])
qc.cp(-0.0030679615757712823,[12], [2])
qc.cp(-0.0015339807878856412,[13], [2])
qc.cp(-0.0007669903939428206,[14], [2])
qc.cp(-0.0003834951969714103,[15], [2])
qc.cp(-0.00019174759848570515,[16], [2])
qc.cp(-9.587379924285257e-05,[17], [2])
qc.cp(-4.7936899621426287e-05,[18], [2])
qc.cp(-0.04908738521234052,[9], [3])
qc.cp(-0.02454369260617026,[10], [3])
qc.cp(-0.01227184630308513,[11], [3])
qc.cp(-0.006135923151542565,[12], [3])
qc.cp(-0.0030679615757712823,[13], [3])
qc.cp(-0.0015339807878856412,[14], [3])
qc.cp(-0.0007669903939428206,[15], [3])
qc.cp(-0.0003834951969714103,[16], [3])
qc.cp(-0.00019174759848570515,[17], [3])
qc.cp(-9.587379924285257e-05,[18], [3])
qc.cp(-0.09817477042468103,[9], [4])
qc.cp(-0.04908738521234052,[10], [4])
qc.cp(-0.02454369260617026,[11], [4])
qc.cp(-0.01227184630308513,[12], [4])
qc.cp(-0.006135923151542565,[13], [4])
qc.cp(-0.0030679615757712823,[14], [4])
qc.cp(-0.0015339807878856412,[15], [4])
qc.cp(-0.0007669903939428206,[16], [4])
qc.cp(-0.0003834951969714103,[17], [4])
qc.cp(-0.00019174759848570515,[18], [4])
qc.cp(-0.19634954084936207,[9], [5])
qc.cp(-0.09817477042468103,[10], [5])
qc.cp(-0.04908738521234052,[11], [5])
qc.cp(-0.02454369260617026,[12], [5])
qc.cp(-0.01227184630308513,[13], [5])
qc.cp(-0.006135923151542565,[14], [5])
qc.cp(-0.0030679615757712823,[15], [5])
qc.cp(-0.0015339807878856412,[16], [5])
qc.cp(-0.0007669903939428206,[17], [5])
qc.cp(-0.0003834951969714103,[18], [5])
qc.cp(-0.39269908169872414,[9], [6])
qc.cp(-0.19634954084936207,[10], [6])
qc.cp(-0.09817477042468103,[11], [6])
qc.cp(-0.04908738521234052,[12], [6])
qc.cp(-0.02454369260617026,[13], [6])
qc.cp(-0.01227184630308513,[14], [6])
qc.cp(-0.006135923151542565,[15], [6])
qc.cp(-0.0030679615757712823,[16], [6])
qc.cp(-0.0015339807878856412,[17], [6])
qc.cp(-0.0007669903939428206,[18], [6])
qc.cp(-0.7853981633974483,[9], [7])
qc.cp(-0.39269908169872414,[10], [7])
qc.cp(-0.19634954084936207,[11], [7])
qc.cp(-0.09817477042468103,[12], [7])
qc.cp(-0.04908738521234052,[13], [7])
qc.cp(-0.02454369260617026,[14], [7])
qc.cp(-0.01227184630308513,[15], [7])
qc.cp(-0.006135923151542565,[16], [7])
qc.cp(-0.0030679615757712823,[17], [7])
qc.cp(-0.0015339807878856412,[18], [7])
qc.cp(-1.5707963267948966,[9], [8])
qc.cp(-0.7853981633974483,[10], [8])
qc.cp(-0.39269908169872414,[11], [8])
qc.cp(-0.19634954084936207,[12], [8])
qc.cp(-0.09817477042468103,[13], [8])
qc.cp(-0.04908738521234052,[14], [8])
qc.cp(-0.02454369260617026,[15], [8])
qc.cp(-0.01227184630308513,[16], [8])
qc.cp(-0.006135923151542565,[17], [8])
qc.cp(-0.0030679615757712823,[18], [8])
qc.h([9])
qc.cp(-1.5707963267948966,[10], [9])
qc.h([10])
qc.cp(-0.7853981633974483,[11], [9])
qc.cp(-1.5707963267948966,[11], [10])
qc.h([11])
qc.cp(-0.39269908169872414,[12], [9])
qc.cp(-0.7853981633974483,[12], [10])
qc.cp(-1.5707963267948966,[12], [11])
qc.h([12])
qc.cp(-0.19634954084936207,[13], [9])
qc.cp(-0.39269908169872414,[13], [10])
qc.cp(-0.7853981633974483,[13], [11])
qc.cp(-1.5707963267948966,[13], [12])
qc.h([13])
qc.cp(-0.09817477042468103,[14], [9])
qc.cp(-0.19634954084936207,[14], [10])
qc.cp(-0.39269908169872414,[14], [11])
qc.cp(-0.7853981633974483,[14], [12])
qc.cp(-1.5707963267948966,[14], [13])
qc.h([14])
qc.cp(-0.04908738521234052,[15], [9])
qc.cp(-0.09817477042468103,[15], [10])
qc.cp(-0.19634954084936207,[15], [11])
qc.cp(-0.39269908169872414,[15], [12])
qc.cp(-0.7853981633974483,[15], [13])
qc.cp(-1.5707963267948966,[15], [14])
qc.h([15])
qc.cp(-0.02454369260617026,[16], [9])
qc.cp(-0.04908738521234052,[16], [10])
qc.cp(-0.09817477042468103,[16], [11])
qc.cp(-0.19634954084936207,[16], [12])
qc.cp(-0.39269908169872414,[16], [13])
qc.cp(-0.7853981633974483,[16], [14])
qc.cp(-1.5707963267948966,[16], [15])
qc.h([16])
qc.cp(-0.01227184630308513,[17], [9])
qc.cp(-0.02454369260617026,[17], [10])
qc.cp(-0.04908738521234052,[17], [11])
qc.cp(-0.09817477042468103,[17], [12])
qc.cp(-0.19634954084936207,[17], [13])
qc.cp(-0.39269908169872414,[17], [14])
qc.cp(-0.7853981633974483,[17], [15])
qc.cp(-1.5707963267948966,[17], [16])
qc.h([17])
qc.cp(-0.006135923151542565,[18], [9])
qc.cp(-0.01227184630308513,[18], [10])
qc.cp(-0.02454369260617026,[18], [11])
qc.cp(-0.04908738521234052,[18], [12])
qc.cp(-0.09817477042468103,[18], [13])
qc.cp(-0.19634954084936207,[18], [14])
qc.cp(-0.39269908169872414,[18], [15])
qc.cp(-0.7853981633974483,[18], [16])
qc.cp(-1.5707963267948966,[18], [17])
qc.h([18])
qc.barrier([0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19])
